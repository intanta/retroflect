// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@prisma-client/generated"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Retro {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  team         String 
  status       Status   @default(REFLECT)
  sprint       String?
  categories   Category[]
  actionItems  Action[]
}

enum Status {
  REFLECT
  VOTE
  REVIEW
  CLOSED
}

model Category {
  id        String   @id @default(uuid())
  name      String
  retro     Retro    @relation(fields: [retroId], references: [id], onDelete: Cascade)
  retroId   String
  comments  Comment[]
}

model Comment {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  text        String
  votes       Int       @default(0)
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  String
}

model Action {
  id          String    @id @default(uuid())
  text        String
  assignee    String
  retro       Retro     @relation(fields: [retroId], references: [id], onDelete: Cascade)
  retroId     String
}


        
